{"version":3,"file":"PhoneTextInput.js","names":["React","useCallback","PropTypes","TextInput","PhoneTextInput","ref","TextInputComponent","onChange","rest","onChangeText","value","preventDefault","defaultPrevented","target","forwardRef","propTypes","string","func","isRequired","autoCompleteType","elementType","defaultProps"],"sources":["../../source/react-native/PhoneTextInput.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { TextInput } from 'react-native'\n\n/**\n * This is an _experimental_ React Native component.\n * Feedback thread: https://github.com/catamphetamine/react-phone-number-input/issues/296\n */\nfunction PhoneTextInput({\n  TextInputComponent,\n  onChange,\n  ...rest\n}, ref) {\n  // Instead of `onChangeText(value: string)` it could use\n  // `onChange(nativeEvent: Event)` and get `value` from `nativeEvent.text`.\n  const onChangeText = useCallback((value) => {\n    onChange({\n      preventDefault() { this.defaultPrevented = true },\n      target: { value }\n    })\n  }, [onChange])\n\n  // React Native `<TextInput/>` supports properties:\n  // * `placeholder: string?`\n  // * `autoFocus: boolean?`\n  // * `value: string?`\n  // plus the ones mentioned below:\n  return (\n    <TextInputComponent\n      ref={ref}\n      keyboardType=\"phone-pad\"\n      onChangeText={onChangeText}\n      {...rest}/>\n  )\n}\n\nPhoneTextInput = React.forwardRef(PhoneTextInput)\n\nPhoneTextInput.propTypes = {\n  /**\n   * The input field `value: string`.\n   */\n  value: PropTypes.string,\n\n  /**\n   * A function of `event: Event`.\n   * Updates the `value: string` property.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * The standard `autoCompleteType` property of a React Native `<TextInput/>`.\n   */\n  autoCompleteType: PropTypes.string,\n\n  /**\n   * The input field component.\n   */\n  TextInputComponent: PropTypes.elementType.isRequired\n}\n\nPhoneTextInput.defaultProps = {\n  /**\n   * Shows phone number suggestion(s) when the user focuses the input field.\n   */\n  autoCompleteType: 'tel',\n\n  /**\n   * By default, uses the default React Native `TextInput` component.\n   */\n  TextInputComponent: TextInput\n}\n\nexport default PhoneTextInput\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,cAAc;;AAExC;AACA;AACA;AACA;AACA,SAASC,cAAc,OAIpBC,GAAG,EAAE;EAAA,IAHNC,kBAAkB,QAAlBA,kBAAkB;IAClBC,QAAQ,QAARA,QAAQ;IACLC,IAAI;EAEP;EACA;EACA,IAAMC,YAAY,GAAGR,WAAW,CAAC,UAACS,KAAK,EAAK;IAC1CH,QAAQ,CAAC;MACPI,cAAc,4BAAG;QAAE,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAAC,CAAC;MACjDC,MAAM,EAAE;QAAEH,KAAK,EAALA;MAAM;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA,oBACE,oBAAC,kBAAkB;IACjB,GAAG,EAAEF,GAAI;IACT,YAAY,EAAC,WAAW;IACxB,YAAY,EAAEI;EAAa,GACvBD,IAAI,EAAG;AAEjB;AAEAJ,cAAc,gBAAGJ,KAAK,CAACc,UAAU,CAACV,cAAc,CAAC;AAEjDA,cAAc,CAACW,SAAS,GAAG;EACzB;AACF;AACA;EACEL,KAAK,EAAER,SAAS,CAACc,MAAM;EAEvB;AACF;AACA;AACA;EACET,QAAQ,EAAEL,SAAS,CAACe,IAAI,CAACC,UAAU;EAEnC;AACF;AACA;EACEC,gBAAgB,EAAEjB,SAAS,CAACc,MAAM;EAElC;AACF;AACA;EACEV,kBAAkB,EAAEJ,SAAS,CAACkB,WAAW,CAACF;AAC5C,CAAC;AAEDd,cAAc,CAACiB,YAAY,GAAG;EAC5B;AACF;AACA;EACEF,gBAAgB,EAAE,KAAK;EAEvB;AACF;AACA;EACEb,kBAAkB,EAAEH;AACtB,CAAC;AAED,eAAeC,cAAc"}