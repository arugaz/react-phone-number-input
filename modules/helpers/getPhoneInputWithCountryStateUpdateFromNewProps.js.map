{"version":3,"file":"getPhoneInputWithCountryStateUpdateFromNewProps.js","names":["getInitialPhoneDigits","getCountryForPartialE164Number","parsePhoneNumber","isCountrySupportedWithError","getSupportedCountries","getPhoneInputWithCountryStateUpdateFromNewProps","props","prevProps","state","metadata","countries","newDefaultCountry","defaultCountry","newValue","value","newReset","reset","international","displayInitialValueAsLocalNumber","initialValueFormat","prevDefaultCountry","prevValue","prevReset","country","hasUserSelectedACountry","_getInitialPhoneDigits","parameters","useNationalFormat","phoneDigits","undefined","isNewDefaultCountrySupported","noValueHasBeenEnteredByTheUser","noValueHasBeenEntered","phoneNumber","parsedCountry","supportedCountries","indexOf","hasUserSelectedACountryUpdate"],"sources":["../../source/helpers/getPhoneInputWithCountryStateUpdateFromNewProps.js"],"sourcesContent":["import {\n\tgetInitialPhoneDigits,\n\tgetCountryForPartialE164Number,\n\tparsePhoneNumber\n} from './phoneInputHelpers.js'\n\nimport {\n\tisCountrySupportedWithError,\n\tgetSupportedCountries\n} from './countries.js'\n\nexport default function getPhoneInputWithCountryStateUpdateFromNewProps(props, prevProps, state) {\n\tconst {\n\t\tmetadata,\n\t\tcountries,\n\t\tdefaultCountry: newDefaultCountry,\n\t\tvalue: newValue,\n\t\treset: newReset,\n\t\tinternational,\n\t\t// `displayInitialValueAsLocalNumber` property has been\n\t\t// superceded by `initialValueFormat` property.\n\t\tdisplayInitialValueAsLocalNumber,\n\t\tinitialValueFormat\n\t} = props\n\n\tconst {\n\t\tdefaultCountry: prevDefaultCountry,\n\t\tvalue: prevValue,\n\t\treset: prevReset\n\t} = prevProps\n\n\tconst {\n\t\tcountry,\n\t\tvalue,\n\t\t// If the user has already manually selected a country\n\t\t// then don't override that already selected country\n\t\t// if the `defaultCountry` property changes.\n\t\t// That's what `hasUserSelectedACountry` flag is for.\n\t\thasUserSelectedACountry\n\t} = state\n\n\tconst _getInitialPhoneDigits = (parameters) => getInitialPhoneDigits({\n\t\t...parameters,\n\t\tinternational,\n\t\tuseNationalFormat: displayInitialValueAsLocalNumber || initialValueFormat === 'national',\n\t\tmetadata\n\t})\n\n\t// Some users requested a way to reset the component\n\t// (both number `<input/>` and country `<select/>`).\n\t// Whenever `reset` property changes both number `<input/>`\n\t// and country `<select/>` are reset.\n\t// It's not implemented as some instance `.reset()` method\n\t// because `ref` is forwarded to `<input/>`.\n\t// It's also not replaced with just resetting `country` on\n\t// external `value` reset, because a user could select a country\n\t// and then not input any `value`, and so the selected country\n\t// would be \"stuck\", if not using this `reset` property.\n\t// https://github.com/catamphetamine/react-phone-number-input/issues/300\n\tif (newReset !== prevReset) {\n\t\treturn {\n\t\t\tphoneDigits: _getInitialPhoneDigits({\n\t\t\t\tvalue: undefined,\n\t\t\t\tdefaultCountry: newDefaultCountry\n\t\t\t}),\n\t\t\tvalue: undefined,\n\t\t\tcountry: newDefaultCountry,\n\t\t\thasUserSelectedACountry: undefined\n\t\t}\n\t}\n\n\t// `value` is the value currently shown in the component:\n\t// it's stored in the component's `state`, and it's not the `value` property.\n\t// `prevValue` is \"previous `value` property\".\n\t// `newValue` is \"new `value` property\".\n\n\t// If the default country changed\n\t// (e.g. in case of ajax GeoIP detection after page loaded)\n\t// then select it, but only if the user hasn't already manually\n\t// selected a country, and no phone number has been manually entered so far.\n\t// Because if the user has already started inputting a phone number\n\t// then they're okay with no country being selected at all (\"International\")\n\t// and they don't want to be disturbed, don't want their input to be screwed, etc.\n\tif (newDefaultCountry !== prevDefaultCountry) {\n\t\tconst isNewDefaultCountrySupported = !newDefaultCountry || isCountrySupportedWithError(newDefaultCountry, metadata)\n\t\tconst noValueHasBeenEnteredByTheUser = (\n\t\t\t// By default, \"no value has been entered\" means `value` is `undefined`.\n\t\t\t!value ||\n\t\t\t// When `international` is `true`, and some country has been pre-selected,\n\t\t\t// then the `<input/>` contains a pre-filled value of `+${countryCallingCode}${leadingDigits}`,\n\t\t\t// so in case of `international` being `true`, \"the user hasn't entered anything\" situation\n\t\t\t// doesn't just mean `value` is `undefined`, but could also mean `value` is `+${countryCallingCode}`.\n\t\t\t(international && value === _getInitialPhoneDigits({\n\t\t\t\tvalue: undefined,\n\t\t\t\tdefaultCountry: prevDefaultCountry\n\t\t\t}))\n\t\t)\n\t\t// Only update the `defaultCountry` property if no phone number\n\t\t// has been entered by the user or pre-set by the application.\n\t\tconst noValueHasBeenEntered = !newValue && noValueHasBeenEnteredByTheUser\n\t\tif (!hasUserSelectedACountry && isNewDefaultCountrySupported && noValueHasBeenEntered) {\n\t\t\treturn {\n\t\t\t\tcountry: newDefaultCountry,\n\t\t\t\t// If `phoneDigits` is empty, then automatically select the new `country`\n\t\t\t\t// and set `phoneDigits` to `+{getCountryCallingCode(newCountry)}`.\n\t\t\t\t// The code assumes that \"no phone number has been entered by the user\",\n\t\t\t\t// and no `value` property has been passed, so the `phoneNumber` parameter\n\t\t\t\t// of `_getInitialPhoneDigits({ value, phoneNumber, ... })` is `undefined`.\n\t\t\t\tphoneDigits: _getInitialPhoneDigits({\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t\tdefaultCountry: newDefaultCountry\n\t\t\t\t}),\n\t\t\t\t// `value` is `undefined` and it stays so.\n\t\t\t\tvalue: undefined\n\t\t\t}\n\t\t}\n\t}\n\n\t// If a new `value` is set externally.\n\t// (e.g. as a result of an ajax API request\n\t//  to get user's phone after page loaded)\n\t// The first part — `newValue !== prevValue` —\n\t// is basically `props.value !== prevProps.value`\n\t// so it means \"if value property was changed externally\".\n\t// The second part — `newValue !== value` —\n\t// is for ignoring the `getDerivedStateFromProps()` call\n\t// which happens in `this.onChange()` right after `this.setState()`.\n\t// If this `getDerivedStateFromProps()` call isn't ignored\n\t// then the country flag would reset on each input.\n\tif (newValue !== prevValue && newValue !== value) {\n\t\tlet phoneNumber\n\t\tlet parsedCountry\n\t\tif (newValue) {\n\t\t\tphoneNumber = parsePhoneNumber(newValue, metadata)\n\t\t\tconst supportedCountries = getSupportedCountries(countries, metadata)\n\t\t\tif (phoneNumber && phoneNumber.country) {\n\t\t\t\t// Ignore `else` because all countries are supported in metadata.\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (!supportedCountries || supportedCountries.indexOf(phoneNumber.country) >= 0) {\n\t\t\t\t\tparsedCountry = phoneNumber.country\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparsedCountry = getCountryForPartialE164Number(newValue, {\n\t\t\t\t\tcountry: undefined,\n\t\t\t\t\tcountries: supportedCountries,\n\t\t\t\t\tmetadata\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tlet hasUserSelectedACountryUpdate\n\t\tif (!newValue) {\n\t\t\t// Reset `hasUserSelectedACountry` flag in `state`.\n\t\t\thasUserSelectedACountryUpdate = {\n\t\t\t\thasUserSelectedACountry: undefined\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t...hasUserSelectedACountryUpdate,\n\t\t\tphoneDigits: _getInitialPhoneDigits({\n\t\t\t\tphoneNumber,\n\t\t\t\tvalue: newValue,\n\t\t\t\tdefaultCountry: newDefaultCountry\n\t\t\t}),\n\t\t\tvalue: newValue,\n\t\t\tcountry: newValue ? parsedCountry : newDefaultCountry\n\t\t}\n\t}\n\n\t// `defaultCountry` didn't change.\n\t// `value` didn't change.\n\t// `phoneDigits` didn't change, because `value` didn't change.\n\t//\n\t// So no need to update state.\n}"],"mappings":";;;AAAA,SACCA,qBAAqB,EACrBC,8BAA8B,EAC9BC,gBAAgB,QACV,wBAAwB;AAE/B,SACCC,2BAA2B,EAC3BC,qBAAqB,QACf,gBAAgB;AAEvB,eAAe,SAASC,+CAA+C,CAACC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAE;EAChG,IACCC,QAAQ,GAULH,KAAK,CAVRG,QAAQ;IACRC,SAAS,GASNJ,KAAK,CATRI,SAAS;IACOC,iBAAiB,GAQ9BL,KAAK,CARRM,cAAc;IACPC,QAAQ,GAOZP,KAAK,CAPRQ,KAAK;IACEC,QAAQ,GAMZT,KAAK,CANRU,KAAK;IACLC,aAAa,GAKVX,KAAK,CALRW,aAAa;IAGbC,gCAAgC,GAE7BZ,KAAK,CAFRY,gCAAgC;IAChCC,kBAAkB,GACfb,KAAK,CADRa,kBAAkB;EAGnB,IACiBC,kBAAkB,GAG/Bb,SAAS,CAHZK,cAAc;IACPS,SAAS,GAEbd,SAAS,CAFZO,KAAK;IACEQ,SAAS,GACbf,SAAS,CADZS,KAAK;EAGN,IACCO,OAAO,GAOJf,KAAK,CAPRe,OAAO;IACPT,KAAK,GAMFN,KAAK,CANRM,KAAK;IAKLU,uBAAuB,GACpBhB,KAAK,CADRgB,uBAAuB;EAGxB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,UAAU;IAAA,OAAK1B,qBAAqB,iCAChE0B,UAAU;MACbT,aAAa,EAAbA,aAAa;MACbU,iBAAiB,EAAET,gCAAgC,IAAIC,kBAAkB,KAAK,UAAU;MACxFV,QAAQ,EAARA;IAAQ,GACP;EAAA;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIM,QAAQ,KAAKO,SAAS,EAAE;IAC3B,OAAO;MACNM,WAAW,EAAEH,sBAAsB,CAAC;QACnCX,KAAK,EAAEe,SAAS;QAChBjB,cAAc,EAAED;MACjB,CAAC,CAAC;MACFG,KAAK,EAAEe,SAAS;MAChBN,OAAO,EAAEZ,iBAAiB;MAC1Ba,uBAAuB,EAAEK;IAC1B,CAAC;EACF;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIlB,iBAAiB,KAAKS,kBAAkB,EAAE;IAC7C,IAAMU,4BAA4B,GAAG,CAACnB,iBAAiB,IAAIR,2BAA2B,CAACQ,iBAAiB,EAAEF,QAAQ,CAAC;IACnH,IAAMsB,8BAA8B;IACnC;IACA,CAACjB,KAAK;IACN;IACA;IACA;IACA;IACCG,aAAa,IAAIH,KAAK,KAAKW,sBAAsB,CAAC;MAClDX,KAAK,EAAEe,SAAS;MAChBjB,cAAc,EAAEQ;IACjB,CAAC,CACD;IACD;IACA;IACA,IAAMY,qBAAqB,GAAG,CAACnB,QAAQ,IAAIkB,8BAA8B;IACzE,IAAI,CAACP,uBAAuB,IAAIM,4BAA4B,IAAIE,qBAAqB,EAAE;MACtF,OAAO;QACNT,OAAO,EAAEZ,iBAAiB;QAC1B;QACA;QACA;QACA;QACA;QACAiB,WAAW,EAAEH,sBAAsB,CAAC;UACnCX,KAAK,EAAEe,SAAS;UAChBjB,cAAc,EAAED;QACjB,CAAC,CAAC;QACF;QACAG,KAAK,EAAEe;MACR,CAAC;IACF;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIhB,QAAQ,KAAKQ,SAAS,IAAIR,QAAQ,KAAKC,KAAK,EAAE;IACjD,IAAImB,WAAW;IACf,IAAIC,aAAa;IACjB,IAAIrB,QAAQ,EAAE;MACboB,WAAW,GAAG/B,gBAAgB,CAACW,QAAQ,EAAEJ,QAAQ,CAAC;MAClD,IAAM0B,kBAAkB,GAAG/B,qBAAqB,CAACM,SAAS,EAAED,QAAQ,CAAC;MACrE,IAAIwB,WAAW,IAAIA,WAAW,CAACV,OAAO,EAAE;QACvC;QACA;QACA,IAAI,CAACY,kBAAkB,IAAIA,kBAAkB,CAACC,OAAO,CAACH,WAAW,CAACV,OAAO,CAAC,IAAI,CAAC,EAAE;UAChFW,aAAa,GAAGD,WAAW,CAACV,OAAO;QACpC;MACD,CAAC,MAAM;QACNW,aAAa,GAAGjC,8BAA8B,CAACY,QAAQ,EAAE;UACxDU,OAAO,EAAEM,SAAS;UAClBnB,SAAS,EAAEyB,kBAAkB;UAC7B1B,QAAQ,EAARA;QACD,CAAC,CAAC;MACH;IACD;IACA,IAAI4B,6BAA6B;IACjC,IAAI,CAACxB,QAAQ,EAAE;MACd;MACAwB,6BAA6B,GAAG;QAC/Bb,uBAAuB,EAAEK;MAC1B,CAAC;IACF;IACA,uCACIQ,6BAA6B;MAChCT,WAAW,EAAEH,sBAAsB,CAAC;QACnCQ,WAAW,EAAXA,WAAW;QACXnB,KAAK,EAAED,QAAQ;QACfD,cAAc,EAAED;MACjB,CAAC,CAAC;MACFG,KAAK,EAAED,QAAQ;MACfU,OAAO,EAAEV,QAAQ,GAAGqB,aAAa,GAAGvB;IAAiB;EAEvD;;EAEA;EACA;EACA;EACA;EACA;AACD"}