{"version":3,"file":"countries.test.js","names":["metadata","sortCountryOptions","getSupportedCountryOptions","isCountrySupportedWithError","getSupportedCountries","describe","it","value","label","should","deep","equal","divider","expect","to","be","undefined"],"sources":["../../source/helpers/countries.test.js"],"sourcesContent":["import metadata from 'libphonenumber-js/min/metadata'\n\nimport {\n\tsortCountryOptions,\n\tgetSupportedCountryOptions,\n\tisCountrySupportedWithError,\n\tgetSupportedCountries\n} from './countries.js'\n\ndescribe('helpers/countries', () => {\n\tit('should sort country options (no `order`)', () => {\n\t\tsortCountryOptions([\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t}\n\t\t]).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with a divider)', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', 'RU']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"...\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', '...']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"…\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '|', '…']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tdivider: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should sort country options (with \"🌐\")', () => {\n\t\tsortCountryOptions(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tvalue: 'RU',\n\t\t\t\t\tlabel: 'Russia'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'International'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tvalue: 'US',\n\t\t\t\t\tlabel: 'United States'\n\t\t\t\t}\n\t\t\t],\n\t\t\t['US', '🌐', '…']\n\t\t).should.deep.equal([\n\t\t\t{\n\t\t\t\tvalue: 'US',\n\t\t\t\tlabel: 'United States'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'International'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'RU',\n\t\t\t\tlabel: 'Russia'\n\t\t\t}\n\t\t])\n\t})\n\n\tit('should get supported country options', () => {\n\t\tgetSupportedCountryOptions([\n\t\t\t'🌐',\n\t\t\t'RU',\n\t\t\t'XX',\n\t\t\t'@',\n\t\t\t'|',\n\t\t\t'…',\n\t\t\t'...',\n\t\t\t'.'\n\t\t], metadata).should.deep.equal([\n\t\t\t'🌐',\n\t\t\t'RU',\n\t\t\t'|',\n\t\t\t'…',\n\t\t\t'...'\n\t\t])\n\t})\n\n\tit('should get supported country options (none supported)', () => {\n\t\texpect(getSupportedCountryOptions([\n\t\t\t'XX',\n\t\t\t'@',\n\t\t\t'.'\n\t\t], metadata)).to.be.undefined\n\t})\n\n\tit('should get supported country options (none supplied)', () => {\n\t\texpect(getSupportedCountryOptions(undefined, metadata)).to.be.undefined\n\t})\n\n\tit('should tell is country is supported with error', () => {\n\t\tisCountrySupportedWithError('RU', metadata).should.equal(true)\n\t\tisCountrySupportedWithError('XX', metadata).should.equal(false)\n\t})\n\n\tit('should get supported countries', () => {\n\t\tgetSupportedCountries(['RU', 'XX'], metadata).should.deep.equal(['RU'])\n\t})\n\n\tit('should get supported countries (none supported)', () => {\n\t\texpect(getSupportedCountries(['XX'], metadata)).to.be.undefined\n\t})\n})"],"mappings":"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"}