{"version":3,"file":"PhoneInput.js","names":["PhoneInput","ref","Component","country","defaultCountry","useNationalFormatForDefaultCountryValue","value","onChange","metadata","international","withCountryCallingCode","rest","usePhoneDigits","phoneDigits","setPhoneDigits","React","forwardRef","propTypes","PropTypes","string","func","isRequired","bool","elementType","object","defaultProps"],"sources":["../source/PhoneInput.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport usePhoneDigits from './usePhoneDigits.js'\n\nfunction PhoneInput({\n\tComponent,\n\tcountry,\n\tdefaultCountry,\n\tuseNationalFormatForDefaultCountryValue,\n\tvalue,\n\tonChange,\n\tmetadata,\n\tinternational,\n\twithCountryCallingCode,\n\t...rest\n}, ref) {\n\t// \"Phone digits\" includes not only \"digits\" but also a `+` sign.\n\tconst [\n\t\tphoneDigits,\n\t\tsetPhoneDigits\n\t] = usePhoneDigits({\n\t\tvalue,\n\t\tonChange,\n\t\tcountry,\n\t\tdefaultCountry,\n\t\tinternational,\n\t\twithCountryCallingCode,\n\t\tuseNationalFormatForDefaultCountryValue,\n\t\tmetadata\n\t})\n\treturn (\n\t\t<Component\n\t\t\t{...rest}\n\t\t\tref={ref}\n\t\t\tmetadata={metadata}\n\t\t\tinternational={international}\n\t\t\twithCountryCallingCode={withCountryCallingCode}\n\t\t\tcountry={country || defaultCountry}\n\t\t\tvalue={phoneDigits}\n\t\t\tonChange={setPhoneDigits} />\n\t)\n}\n\nPhoneInput = React.forwardRef(PhoneInput)\n\nPhoneInput.propTypes = {\n\t/**\n\t * The phone number (in E.164 format).\n\t * Examples: `\"+12\"`, `\"+12133734253\"`.\n\t * An \"empty\" `value` could be represented by any \"falsy\" value like `undefined`, `null` or an empty string `\"\"`.\n\t */\n\tvalue: PropTypes.string,\n\n\t/**\n\t * A function of `value: string?`.\n\t * Updates the `value` property (to `undefined` in case it's empty).\n\t */\n\tonChange: PropTypes.func.isRequired,\n\n\t/**\n\t * A two-letter country code for formatting `value`\n\t * as a national phone number (example: `(213) 373-4253`),\n\t * or as an international phone number without \"country calling code\"\n\t * if `international` property is passed (example: `213 373 4253`).\n\t * Example: \"US\".\n\t * If no `country` is passed then `value`\n\t * is formatted as an international phone number.\n\t * (example: `+1 213 373 4253`)\n\t */\n\tcountry: PropTypes.string,\n\n\t/**\n\t * A two-letter country code for formatting `value`\n\t * when a user inputs a national phone number (example: `(213) 373-4253`).\n\t * The user can still input a phone number in international format.\n\t * Example: \"US\".\n\t * `country` and `defaultCountry` properties are mutually exclusive.\n\t */\n\tdefaultCountry: PropTypes.string,\n\n\t/**\n\t * If `country` property is passed along with `international={true}` property\n\t * then the phone number will be input in \"international\" format for that `country`\n\t * (without \"country calling code\").\n\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\n\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\n\t * But if both `country=\"US\"` and `international={true}` properties are passed then\n\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\n\t * (without \"country calling code\" `+1`).\n\t */\n\tinternational: PropTypes.bool,\n\n\t/**\n\t * If `country` and `international` properties are set,\n\t * then by default it won't include \"country calling code\" in the input field.\n\t * To change that, pass `withCountryCallingCode` property,\n\t * and it will include \"country calling code\" in the input field.\n\t */\n\twithCountryCallingCode: PropTypes.bool,\n\n\t/**\n\t * A component that renders the `<input/>` itself and also\n\t * parses and formats its `value` as the user inputs it.\n\t */\n\tComponent: PropTypes.elementType.isRequired,\n\n\t/**\n\t * When `defaultCountry` is defined and the initial `value` corresponds to `defaultCountry`,\n\t * then the `value` will be formatted as a national phone number by default.\n\t * To format the initial `value` of `defaultCountry` as an international number instead\n\t * set `useNationalFormatForDefaultCountryValue` property to `true`.\n\t */\n\tuseNationalFormatForDefaultCountryValue: PropTypes.bool.isRequired,\n\n\t/**\n\t * `libphonenumber-js` metadata.\n\t */\n\tmetadata: PropTypes.object.isRequired\n}\n\nPhoneInput.defaultProps = {\n\t/**\n\t * Set to `true` to force international phone number format\n\t * (without \"country calling code\") when `country` is specified.\n\t */\n\t// international: false,\n\n\t/**\n\t * Prefer national format when formatting E.164 phone number `value`\n\t * corresponding to `defaultCountry`.\n\t */\n\tuseNationalFormatForDefaultCountryValue: true\n}\n\nexport default PhoneInput"],"mappings":";;;;;;AAAA;AACA;AAEA;AAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhD,SAASA,UAAU,OAWhBC,GAAG,EAAE;EAAA,IAVPC,SAAS,QAATA,SAAS;IACTC,OAAO,QAAPA,OAAO;IACPC,cAAc,QAAdA,cAAc;IACdC,uCAAuC,QAAvCA,uCAAuC;IACvCC,KAAK,QAALA,KAAK;IACLC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IACRC,aAAa,QAAbA,aAAa;IACbC,sBAAsB,QAAtBA,sBAAsB;IACnBC,IAAI;EAEP;EACA,sBAGI,IAAAC,2BAAc,EAAC;MAClBN,KAAK,EAALA,KAAK;MACLC,QAAQ,EAARA,QAAQ;MACRJ,OAAO,EAAPA,OAAO;MACPC,cAAc,EAAdA,cAAc;MACdK,aAAa,EAAbA,aAAa;MACbC,sBAAsB,EAAtBA,sBAAsB;MACtBL,uCAAuC,EAAvCA,uCAAuC;MACvCG,QAAQ,EAARA;IACD,CAAC,CAAC;IAAA;IAXDK,WAAW;IACXC,cAAc;EAWf,oBACC,gCAAC,SAAS,eACLH,IAAI;IACR,GAAG,EAAEV,GAAI;IACT,QAAQ,EAAEO,QAAS;IACnB,aAAa,EAAEC,aAAc;IAC7B,sBAAsB,EAAEC,sBAAuB;IAC/C,OAAO,EAAEP,OAAO,IAAIC,cAAe;IACnC,KAAK,EAAES,WAAY;IACnB,QAAQ,EAAEC;EAAe,GAAG;AAE/B;AAEAd,UAAU,gBAAGe,iBAAK,CAACC,UAAU,CAAChB,UAAU,CAAC;AAEzCA,UAAU,CAACiB,SAAS,GAAG;EACtB;AACD;AACA;AACA;AACA;EACCX,KAAK,EAAEY,qBAAS,CAACC,MAAM;EAEvB;AACD;AACA;AACA;EACCZ,QAAQ,EAAEW,qBAAS,CAACE,IAAI,CAACC,UAAU;EAEnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACClB,OAAO,EAAEe,qBAAS,CAACC,MAAM;EAEzB;AACD;AACA;AACA;AACA;AACA;AACA;EACCf,cAAc,EAAEc,qBAAS,CAACC,MAAM;EAEhC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCV,aAAa,EAAES,qBAAS,CAACI,IAAI;EAE7B;AACD;AACA;AACA;AACA;AACA;EACCZ,sBAAsB,EAAEQ,qBAAS,CAACI,IAAI;EAEtC;AACD;AACA;AACA;EACCpB,SAAS,EAAEgB,qBAAS,CAACK,WAAW,CAACF,UAAU;EAE3C;AACD;AACA;AACA;AACA;AACA;EACChB,uCAAuC,EAAEa,qBAAS,CAACI,IAAI,CAACD,UAAU;EAElE;AACD;AACA;EACCb,QAAQ,EAAEU,qBAAS,CAACM,MAAM,CAACH;AAC5B,CAAC;AAEDrB,UAAU,CAACyB,YAAY,GAAG;EACzB;AACD;AACA;AACA;EACC;;EAEA;AACD;AACA;AACA;EACCpB,uCAAuC,EAAE;AAC1C,CAAC;AAAA,eAEcL,UAAU;AAAA"}