{"version":3,"file":"InputSmart.js","names":["createInput","defaultMetadata","InputSmart","ref","country","international","withCountryCallingCode","metadata","rest","format","useCallback","value","formatter","AsYouType","prefix","getInputValuePrefix","text","input","template","getTemplate","removeInputValuePrefix","parsePhoneNumberCharacter","React","forwardRef","propTypes","PropTypes","string","isRequired","onChange","func","bool","object","defaultProps"],"sources":["../source/InputSmart.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport Input from 'input-format/react'\nimport { AsYouType, parsePhoneNumberCharacter } from 'libphonenumber-js/core'\n\nimport { getInputValuePrefix, removeInputValuePrefix } from './helpers/inputValuePrefix.js'\n\nexport function createInput(defaultMetadata)\n{\n\t/**\n\t * `InputSmart` is a \"smarter\" implementation of a `Component`\n\t * that can be passed to `<PhoneInput/>`. It parses and formats\n\t * the user's and maintains the caret's position in the process.\n\t * The caret positioning is maintained using `input-format` library.\n\t * Relies on being run in a DOM environment for calling caret positioning functions.\n\t */\n\tfunction InputSmart({\n\t\tcountry,\n\t\tinternational,\n\t\twithCountryCallingCode,\n\t\tmetadata,\n\t\t...rest\n\t}, ref) {\n\t\tconst format = useCallback((value) => {\n\t\t\t// \"As you type\" formatter.\n\t\t\tconst formatter = new AsYouType(country, metadata)\n\t\t\tconst prefix = getInputValuePrefix({\n\t\t\t\tcountry,\n\t\t\t\tinternational,\n\t\t\t\twithCountryCallingCode,\n\t\t\t\tmetadata\n\t\t\t})\n\t\t\t// Format the number.\n\t\t\tlet text = formatter.input(prefix + value)\n\t\t\tlet template = formatter.getTemplate()\n\t\t\tif (prefix) {\n\t\t\t\ttext = removeInputValuePrefix(text, prefix)\n\t\t\t\t// `AsYouType.getTemplate()` can be `undefined`.\n\t\t\t\tif (template) {\n\t\t\t\t\ttemplate = removeInputValuePrefix(template, prefix)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext,\n\t\t\t\ttemplate\n\t\t\t}\n\t\t}, [country, metadata])\n\t\treturn (\n\t\t\t<Input\n\t\t\t\t{...rest}\n\t\t\t\tref={ref}\n\t\t\t\tparse={parsePhoneNumberCharacter}\n\t\t\t\tformat={format}/>\n\t\t)\n\t}\n\n\tInputSmart = React.forwardRef(InputSmart)\n\n\tInputSmart.propTypes = {\n\t\t/**\n\t\t * The parsed phone number.\n\t\t * \"Parsed\" not in a sense of \"E.164\"\n\t\t * but rather in a sense of \"having only\n\t\t * digits and possibly a leading plus character\".\n\t\t * Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\n\t\t */\n\t\tvalue: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * A function of `value: string`.\n\t\t * Updates the `value` property.\n\t\t */\n\t\tonChange: PropTypes.func.isRequired,\n\n\t\t/**\n\t\t * A two-letter country code for formatting `value`\n\t\t * as a national phone number (e.g. `(800) 555 35 35`).\n\t\t * E.g. \"US\", \"RU\", etc.\n\t\t * If no `country` is passed then `value`\n\t\t * is formatted as an international phone number.\n\t\t * (e.g. `+7 800 555 35 35`)\n\t\t * Perhaps the `country` property should have been called `defaultCountry`\n\t\t * because if `value` is an international number then `country` is ignored.\n\t\t */\n\t\tcountry: PropTypes.string,\n\n\t\t/**\n\t\t * If `country` property is passed along with `international={true}` property\n\t\t * then the phone number will be input in \"international\" format for that `country`\n\t\t * (without \"country calling code\").\n\t\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\n\t\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\n\t\t * But if both `country=\"US\"` and `international={true}` properties are passed then\n\t\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\n\t\t * (without \"country calling code\" `+1`).\n\t\t */\n\t\tinternational: PropTypes.bool,\n\n\t\t/**\n\t\t * If `country` and `international` properties are set,\n\t\t * then by default it won't include \"country calling code\" in the input field.\n\t\t * To change that, pass `withCountryCallingCode` property,\n\t\t * and it will include \"country calling code\" in the input field.\n\t\t */\n\t\twithCountryCallingCode: PropTypes.bool,\n\n\t\t/**\n\t\t * `libphonenumber-js` metadata.\n\t\t */\n\t\tmetadata: PropTypes.object.isRequired\n\t}\n\n\tInputSmart.defaultProps = {\n\t\tmetadata: defaultMetadata\n\t}\n\n\treturn InputSmart\n}\n\nexport default createInput()"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAA2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpF,SAASA,WAAW,CAACC,eAAe,EAC3C;EACC;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,UAAU,OAMhBC,GAAG,EAAE;IAAA,IALPC,OAAO,QAAPA,OAAO;MACPC,aAAa,QAAbA,aAAa;MACbC,sBAAsB,QAAtBA,sBAAsB;MACtBC,QAAQ,QAARA,QAAQ;MACLC,IAAI;IAEP,IAAMC,MAAM,GAAG,IAAAC,kBAAW,EAAC,UAACC,KAAK,EAAK;MACrC;MACA,IAAMC,SAAS,GAAG,IAAIC,eAAS,CAACT,OAAO,EAAEG,QAAQ,CAAC;MAClD,IAAMO,MAAM,GAAG,IAAAC,qCAAmB,EAAC;QAClCX,OAAO,EAAPA,OAAO;QACPC,aAAa,EAAbA,aAAa;QACbC,sBAAsB,EAAtBA,sBAAsB;QACtBC,QAAQ,EAARA;MACD,CAAC,CAAC;MACF;MACA,IAAIS,IAAI,GAAGJ,SAAS,CAACK,KAAK,CAACH,MAAM,GAAGH,KAAK,CAAC;MAC1C,IAAIO,QAAQ,GAAGN,SAAS,CAACO,WAAW,EAAE;MACtC,IAAIL,MAAM,EAAE;QACXE,IAAI,GAAG,IAAAI,wCAAsB,EAACJ,IAAI,EAAEF,MAAM,CAAC;QAC3C;QACA,IAAII,QAAQ,EAAE;UACbA,QAAQ,GAAG,IAAAE,wCAAsB,EAACF,QAAQ,EAAEJ,MAAM,CAAC;QACpD;MACD;MACA,OAAO;QACNE,IAAI,EAAJA,IAAI;QACJE,QAAQ,EAARA;MACD,CAAC;IACF,CAAC,EAAE,CAACd,OAAO,EAAEG,QAAQ,CAAC,CAAC;IACvB,oBACC,gCAAC,kBAAK,eACDC,IAAI;MACR,GAAG,EAAEL,GAAI;MACT,KAAK,EAAEkB,+BAA0B;MACjC,MAAM,EAAEZ;IAAO,GAAE;EAEpB;EAEAP,UAAU,gBAAGoB,iBAAK,CAACC,UAAU,CAACrB,UAAU,CAAC;EAEzCA,UAAU,CAACsB,SAAS,GAAG;IACtB;AACF;AACA;AACA;AACA;AACA;AACA;IACEb,KAAK,EAAEc,qBAAS,CAACC,MAAM,CAACC,UAAU;IAElC;AACF;AACA;AACA;IACEC,QAAQ,EAAEH,qBAAS,CAACI,IAAI,CAACF,UAAU;IAEnC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEvB,OAAO,EAAEqB,qBAAS,CAACC,MAAM;IAEzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACErB,aAAa,EAAEoB,qBAAS,CAACK,IAAI;IAE7B;AACF;AACA;AACA;AACA;AACA;IACExB,sBAAsB,EAAEmB,qBAAS,CAACK,IAAI;IAEtC;AACF;AACA;IACEvB,QAAQ,EAAEkB,qBAAS,CAACM,MAAM,CAACJ;EAC5B,CAAC;EAEDzB,UAAU,CAAC8B,YAAY,GAAG;IACzBzB,QAAQ,EAAEN;EACX,CAAC;EAED,OAAOC,UAAU;AAClB;AAAC,eAEcF,WAAW,EAAE;AAAA"}